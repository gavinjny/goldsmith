name: Reset Amazon services

on:
  push:
    branches: [ "test" ]

env:
  AWS_REGION:                    # set this to your preferred AWS region, e.g. us-west-1

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Reset AWS Storefront Objects
    runs-on: ubuntu-latest
    environment: Prod

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_PIPELINE_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Test
      run: aws ec2 describe-instances --filters "Name=tag:Name,Values=*f*"


    # - name: Terminate EC2 instances
    #   run: |
    #     INSTANCE_IDS=$(aws ec2 describe-instances \
    #       --filters "Name=tag:Name,Values=*storefront*" "Name=instance-state-name,Values=running,stopped" \
    #       --query "Reservations[].Instances[].InstanceId" \
    #       --output text)

    #     if [ -n "$INSTANCE_IDS" ]; then
    #       aws ec2 terminate-instances --instance-ids $INSTANCE_IDS
    #       echo "Terminated EC2 instances: $INSTANCE_IDS"
    #     else
    #       echo "No EC2 instances found with 'storefront' in the name."
    #     fi

    # - name: Delete ALBs/NLBs
    #   run: |
    #     ELB_ARNS=$(aws elbv2 describe-load-balancers \
    #       --query "LoadBalancers[?contains(LoadBalancerName, 'storefront')].LoadBalancerArn" \
    #       --output text)

    #     for arn in $ELB_ARNS; do
    #       aws elbv2 delete-load-balancer --load-balancer-arn "$arn"
    #       echo "Deleted ALB/NLB: $arn"
    #     done

    # - name: Delete CloudWatch Dashboards
    #   run: |
    #     DASHBOARDS=$(aws cloudwatch list-dashboards \
    #       --query "DashboardEntries[?contains(DashboardName, 'storefront')].DashboardName" \
    #       --output text)

    #     for name in $DASHBOARDS; do
    #       aws cloudwatch delete-dashboards --dashboard-names "$name"
    #       echo "Deleted CloudWatch Dashboard: $name"
    #     done
