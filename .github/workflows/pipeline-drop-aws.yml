name: Reset Amazon services

on:
  push:
    branches: [ "test" ]

env:
  AWS_REGION:                    # set this to your preferred AWS region, e.g. us-west-1

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Reset AWS Storefront Objects
    runs-on: ubuntu-latest
    environment: Prod

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_PIPELINE_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Stop EC2 instances
      run: |
        INSTANCE_IDS=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=*storefront*" "Name=instance-state-name,Values=running" \
          --query "Reservations[].Instances[].InstanceId" \
          --output text)
  
        if [ -n "$INSTANCE_IDS" ]; then
          aws ec2 stop-instances --instance-ids $INSTANCE_IDS
          echo "Stopped instances: $INSTANCE_IDS"
        else
          echo "No running storefront EC2 instances found."
        fi

    - name: Terminate EC2 instances
      run: aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=*storefront*" \
        --query "Reservations[].Instances[?State.Name!='terminated'].InstanceId[]" \
        --output text | xargs -r aws ec2 terminate-instances --instance-ids

    - name: Terminate ELB instances
      run: aws elbv2 describe-load-balancers \
        --query "LoadBalancers[?contains(LoadBalancerName, 'storefront')].LoadBalancerArn" \
        --output text |
        xargs -n1 -I{} aws elbv2 delete-load-balancer --load-balancer-arn {}

    - name: Terminate CloudWatch
      run: aws cloudwatch list-dashboards \
        --query "DashboardEntries[?contains(DashboardName, 'storefront')].DashboardName" \
        --output text |
        xargs -n1 -I{} aws cloudwatch delete-dashboards --dashboard-names {}