- hosts: all
  name: Deploy resume site with Apache
  become: true

  tasks:
  # ----------------------------INSTALL WEB SERVER AND DEPENDENCIES----------------------------------
    - name: Ensure Apache is installed
      apt:
        name: apache2
        state: present
        update_cache: yes

    - name: Ensure Apache is running and enabled
      service:
        name: apache2
        state: started
        enabled: true

  # ----------------------------INSTALL SSM----------------------------------
    - name: Ensure snap is installed
      apt:
        name: snapd
        state: present
        update_cache: yes

    - name: Ensure SSM Agent is installed via snap
      command: snap install amazon-ssm-agent --classic
      register: ssm_result
      changed_when: "'installed' in ssm_result.stdout or 'updated' in ssm_result.stdout"
      failed_when: false

    - name: Start amazon-ssm-agent via snap
      command: snap start amazon-ssm-agent

  # ----------------------------INSTALL WEB----------------------------------
    - name: Copy resume HTML to web root
      copy:
        src: "./resume/index.html"
        dest: "/var/www/html/index.html"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Copy favicon HTML to web root
      copy:
        src: "./resume/favicon.ico"
        dest: "/var/www/html/favicon.ico"
        owner: www-data
        group: www-data
        mode: '0644'
  # ----------------------------VALIDATE DEPLOYMENT----------------------------------
    - name: Wait for web service to become available
      uri:
        url: http://localhost
        status_code: 200
        timeout: 10
      register: homepage
      retries: 5
      delay: 3
      until: homepage.status == 200

    - name: Fetch index.html content
      uri:
        url: http://localhost
        return_content: yes
      register: homepage_content

    - name: Assert resume page is served
      assert:
        that:
          - "'Resume' in homepage_content.content"
        fail_msg: "Resume page not served correctly"
        success_msg: "Resume site deployed successfully!"

    - name: Get current timezone
      command: timedatectl show -p Timezone --value
      register: timezone_result

    - name: Assert timezone is America/New_York
      assert:
        that:
          - timezone_result.stdout == "America/New_York"
        fail_msg: "Timezone is not set to America/New_York"
        success_msg: "Timezone is correctly set to America/New_York"


    - name: Check for available package updates
      command: apt list --upgradeable
      register: upgradeable_output
      changed_when: false
      failed_when: false

    - name: Assert that system is up to date
      assert:
        that:
          - "'upgradable' not in upgradeable_output.stdout"
        fail_msg: "There are packages that need to be upgraded."
        success_msg: "System is fully updated."